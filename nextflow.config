// Parameters for scRNA-seq workflow

params {

    // general options:
    publish_dir_mode    = 'rellink'
    enable_conda        = false
    author              = 'Alexander Toenges'
    prefix              = ''
    outdir_root         = "sc_preprocess"

    // the fastq files (paired-end):
    params.fastq        = ''
        
    // Define reference files as well as names of column in the GTF, and the name of chrM:
    ref_genome          = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz'
    ref_txtome          = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz'
    ref_gtf             = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz'
    ref_gene_name       = 'gene_name'
    ref_gene_id         = 'gene_id'
    ref_gene_type       = 'gene_type'
    ref_chrM            = 'chrM'

    // experiment-specific arguments:
    cdna_readlength     = 91

    // Parameters related to indexing the gentrome:
    idx_outdir          = "support_files/Gencode_M25/"          // name for the output directory of index-related files
    idx_threads         = 2                                     // threads for salmon/alevin indexing
    idx_name            = "alevinIDX"                           // name of the folder containing the salmon/alevin idx files
    idx_salmonargs      = '--sparse --gencode'                  // further arguments beyond [ -t -d -i -p ] for salmon/alevin indexing
    idx_label           = 'idx_big'                             // the CPU/memory allocation when used on the HPC

    // Parameters related to the Alevin quantification process:
    quant_outdir        = "${params.outdir_root}/alevinQuant/"
    quant_threads       = 6
    quant_libtype       = 'ISR'
    quant_additional    = '--chromiumV3'                        // additional quant args, including the chemistry, beyond [ -i --tgMap --mrna --rrna -l -p -o -1 -2 ]
    quant_label         = 'quant_big'                           // the CPU/memory allocation when used on the HPC

    // Parameters to reading the quantifications into R and save as mtx.gz for easy loading:
    mtx_outdir          = "${params.outdir_root}/mtx/"
    mtx_threads         = 4

}

profiles {

    // define the container from Dockerhub
    params.container            = 'atpoint/sc_preprocess:v1.0.0'

    local {
        docker.enabled          = false
        singularity.enabled     = false
    }
    docker {
        process.container       = params.container
        docker.enabled          = true        
    }
    singularity {
        process.container       = "docker://${params.container}"
        singularity.enabled     = true
        singularity.autoMounts  = true
    }

    // submission on HPC:
    slurm {
        process.executor        = 'slurm'
        process.queue           = 'normal'
        process.clusterOptions  = '--time=12:00:00'
    }

    // small test data comprising of murine chr19 and chrM:
    test {
        params.ref_genome          = "$baseDir/test/gencode_genome_small.fa.gz"
        params.ref_txtome          = "$baseDir/test/gencode_txtome_small.fa.gz"
        params.ref_gtf             = "$baseDir/test/gencode_small.gtf.gz"
        params.fastq               = "$baseDir/test/*_{1,2}.fastq.gz"
        params.idx_threads         = 2
        params.quant_outdir        = "${params.outdir_root}/alevinQuant/"
        params.quant_threads       = 2
        params.quant_libtype       = 'ISR'
        params.quant_additional    = '--chromiumV3 --forceCells 4000'
        params.idx_label           = 'idx_small'
        params.quant_label         = 'quant_small'
    }   
}

// Resource allocation, 
// ==> one for a 'normal' queue on HPC (72 core Skylake Gold 5118, 92GB or 192GB RAM)
// ==> quad-core (8 threads) laptop with 16GB RAM
process {

    // Indexing process:
    withLabel: idx_big { 
        cpus    = 64
        memory  = 40.GB
    }
    withLabel: idx_small {
        cpus    = 4
        memory  = 15.GB
    }

    // Quantification process:
    withLabel: quant_big {          // four forks of this on the standard node
        cpus    = 16
        memory  = 40.GB
    }
    withLabel: quant_small {       // two forks of this on the laptop
        cpus    = 3
        memory  = 6.GB
    }

}
